#House Price Prediction

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
houses_data = pd.read_csv("train.csv")
test_data = pd.read_csv("test.csv")

#Data Preprocessing

houses_data.info()
houses_data.isnull().sum()
data_subset = houses_data[['TotalBsmtSF', 'BedroomAbvGr', 'FullBath', 'HalfBath','SalePrice']]
correlation_matrix = data_subset.corr()


# Create a heatmap for the correlation matrix

plt.figure(figsize=(6, 4))
sns.heatmap(correlation_matrix, annot=True, cmap='Blues', fmt=".2f")
plt.title("Correlation Heatmap: Features vs. Target")
plt.show()
# Split the data into training and testing sets

X = houses_data[['TotalBsmtSF', 'BedroomAbvGr', 'FullBath', 'HalfBath']]
y = houses_data[['SalePrice']]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
#Model Tranning and Evualization

model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")
test_data = test_data[['TotalBsmtSF', 'BedroomAbvGr', 'FullBath', 'HalfBath']]
model.predict(test_data)
